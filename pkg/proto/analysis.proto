syntax = "proto3";
package analysis;
option go_package="pkg/proto";
import "google/api/annotations.proto";

message Order {
  int32 Id = 1;
  float Discount = 2;
  float Amount = 3;
  string PaymentMode = 4;
  int32 Rating = 5;
  int32 Duration = 6;
  string Cuisine = 7;
  int32 Time = 8;
}

message Item {
  int32 Id = 1;
  float Amount = 2;
  float Discount = 3;
  string Cuisine = 4;
}

message ListItems {
  repeated Item items = 1;
}

message GetReq {
  int32 Id = 1;
}

message Length {
  int32 length = 1;
}

message Customer {
  int32 Id = 1;
  string Name = 2;
  string State = 3;
}

message Restaurant {
  int32 Id = 1;
  string Name = 2;
  string State = 3;
}

message RestaurantList {
  repeated Restaurant Rest = 1;
}

message StateCuisines {
  message CuisineList {
    repeated string Cuisine = 1;
  }
  map<string, CuisineList> States = 1;
}

message CuisineCustomers {
  message CustomerList {
    repeated Customer Customer = 1;
  }
  map<string, CustomerList> Cuisines = 1;
}

message LoginReq {
  LoginCred cred = 1;
}

message LoginCred {
  string user = 1;
  string pass = 2;
}

message LoginRes {
  string token = 1;
}

message OrderReq {
  Order order = 1;
}

message PostRes {
  string response = 1;
}

message CustomerReq {
  Customer customer = 1;
}

message RestReq {
  Restaurant restaurant = 1;
}

message PostItemReq {
  int32 Id = 1;
  Item item = 2;
}

message ItemReq {
  message Limits {
    int32 low = 1;
    int32 high = 2;
  }
  int32 Id = 1;
  int32 itemId = 2;
  Limits limit = 3;
}

service Analysis {

  rpc Login(LoginReq) returns (LoginRes) {
    option (google.api.http) = {
      post: "v1/login",
      body: "cred"
    };
  }

  rpc GetOrder(GetReq) returns (Order) {
    option (google.api.http) = {
      get: "/v1/orders/{Id}"
    };
  }

  rpc PostOrder(OrderReq) returns (PostRes) {
    option (google.api.http) = {
      post: "/v1/orders",
      body: "order"
    };
  }

  rpc PutOrder(OrderReq) returns (PostRes) {
    option (google.api.http) = {
      put: "/v1/orders/{order.Id}"
      body: "order"
    };
  }

  rpc GetAllCustomers(GetReq) returns (Customer) {
    option (google.api.http) = {
      get: "/v1/customers"
    };
  }

  rpc GetCustomer(CustomerReq) returns (Customer) {
    option (google.api.http) = {
      get: "/v1/customers/{customer.Id}"
    };
  }

  rpc PutCustomer(CustomerReq) returns (PostRes) {
    option (google.api.http) = {
      put: "/v1/customers/{customer.Id}",
      body: "customer"
    };
  }

  rpc DeleteOrder(OrderReq) returns (PostRes) {
    option (google.api.http) = {
      delete: "/v1/orders/{order.Id}"
    };
  }

  rpc GetRestaurant(GetReq) returns (Restaurant) {
    option (google.api.http) = {
      get: "/v1/restaurants/{Id}"
    };
  }

  rpc PostRestaurant(RestReq) returns (PostRes) {
    option (google.api.http) = {
      post: "/v1/restaurants",
      body: "restaurant"
    };
  }

  rpc GetRestaurantAllItems(GetReq) returns (ListItems) {
    option (google.api.http) = {
      get: "/v1/restaurant/{Id}/items"
    };
  }

  rpc GetRestaurantRangeItems(ItemReq) returns (ListItems) {
    option (google.api.http) = {
      get: "/v1/restaurant/{Id}/items?min={limit.low}&max={limit.high}"
    };
  }

  rpc GetRestaurantItem(ItemReq) returns (Item) {
    option (google.api.http) = {
      get: "/v1/restaurant/{Id}/items/{itemId}"
    };
  }

  rpc PostRestaurantItems(PostItemReq) returns (PostRes) {
    option (google.api.http) = {
      post: "/v1/restaurant/{Id}/items",
      body: "item"
    };
  }

  rpc PutRestaurantItems(PostItemReq) returns (PostRes) {
    option (google.api.http) = {
      put: "/v1/restaurant/{Id}/items/{item.Id}",
      body: "item"
      addition_bindings {
        put: "/v1/restaurant/{Id}/items"
        body: "item"
      }
    };
  }

  rpc DeleteRestaurantItems(PostItemReq) returns (PostRes) {
    option (google.api.htpp) = {
      delete: "/v1/restaurant/{Id}/items/{item.Id}"
    };
  }

  rpc TopRestaurants(GetReq) returns (RestaurantList) {
    option (google.api.http) = {
      get: "/v1/restaurants/top/{Id}"
    };
  }

  rpc WorstRestaurants(GetReq) returns (RestaurantList) {
    option (google.api.http) = {
      get: "/v1/restaurants/worst/{Id}"
    };
  }

  rpc TopStateCuisines(GetReq) returns (StateCuisines) {
    option (google.api.http) = {
      get: "/v1/state-cuisines/top/{Id}"
    };
  }

  rpc WorstStateCuisines(GetReq) returns (StateCuisines) {
    option (google.api.http) = {
      get: "/v1/state-cuisines/worst/{Id}"
    };
  }

  rpc CuisineCustomerMap(Length) returns (CuisineCustomers) {
    option (google.api.http) = {
      get: "/v1/cuisines-demographics"
    };
  }
}